definitions:
  handler.ExistReq:
    properties:
      id:
        type: string
      token:
        type: string
    type: object
  service.Category:
    properties:
      emoji:
        type: string
      emoji_html:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  service.Discussion:
    properties:
      author:
        $ref: '#/definitions/service.User'
      category:
        $ref: '#/definitions/service.Category'
      comment_count:
        type: integer
      comment_users:
        items:
          $ref: '#/definitions/service.User'
        type: array
      created_at:
        type: integer
      id:
        type: string
      is_answered:
        type: boolean
      labels:
        items:
          $ref: '#/definitions/service.Label'
        type: array
      thumbs_up:
        type: integer
      title:
        type: string
      upvote_count:
        type: integer
      url:
        type: string
    type: object
  service.InstallerCount:
    properties:
      total:
        type: integer
    type: object
  service.Issue:
    properties:
      author:
        $ref: '#/definitions/service.User'
      comment_count:
        type: integer
      created_at:
        type: integer
      id:
        type: string
      labels:
        items:
          $ref: '#/definitions/service.Label'
        type: array
      thumbs_up:
        type: integer
      title:
        type: string
      url:
        type: string
    type: object
  service.Label:
    properties:
      color:
        type: string
      name:
        type: string
    type: object
  service.Repo:
    properties:
      id:
        type: string
      star_count:
        type: integer
    type: object
  service.User:
    properties:
      avatar_url:
        type: string
      login:
        type: string
    type: object
info:
  contact: {}
paths:
  /exist:
    post:
      consumes:
      - application/json
      description: get ip if id exist
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.ExistReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: get ip if id exist
      tags:
      - Safeline
  /repos/discussions:
    get:
      consumes:
      - application/json
      description: get discussions from GitHub
      parameters:
      - description: search by
        in: query
        name: q
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/service.Discussion'
            type: array
      summary: get discussions
      tags:
      - GitHub
  /repos/info:
    get:
      consumes:
      - application/json
      description: get repo info from GitHub
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.Repo'
      summary: get repo info
      tags:
      - GitHub
  /repos/issues:
    get:
      consumes:
      - application/json
      description: get issues from GitHub
      parameters:
      - description: search by
        in: query
        name: q
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/service.Issue'
            type: array
      summary: get issues
      tags:
      - GitHub
  /safeline/count:
    get:
      consumes:
      - application/json
      description: get installer count
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.InstallerCount'
      summary: get installer count
      tags:
      - Safeline
swagger: "2.0"
